"""
    Основная идея - есть баланс на начало месяца 
    Выставляется как 0 при инициализации класса 
    И сохраняется как текущий баланс карты на момент выполнения process_month 

    Соответственно за месяц, клиент должен внести начисления, которых должно быть больше или равно чем заданный процент от баланса на начало месяца 
    Иными словами, баланс на конец месяца может быть равным или даже больше лимита, но если клиент погасил его более чем на заданный процент от баланса
    на начало месяца, то доп штраф не списывается 

    В конструктор добавляются переменные: 
    min_monthly_payment_pct (от 0 до 1)
    late_fee (положительное число)
    Также добавляется переменная - _month_begin_balance - баланс на начало месяца, по уиолчанию 0 
    _month_customer_payments - накапливает в себе все платежи, совершенные клиентом 

    make_payment - дорабатывется - добавляется инкремент для _month_customer_payments 

    process_month - дорабатывается - когда рассчитывается финальный баланс - он записывается в month_begin_balance 
    В самом начале - проверяется, если _month_customer_payments < _month_begin_balance * min_monthly_payment_pct то тогда к балансу прибавляется late_fee 

    Для такой упоротой дичи (постановки задачи - даже тесты писать не хочется, но я напишу парочку)
    Где мы проверяем сколько платежей было выполнено 
    И где проверяем насколько изменился баланс (был ли применен штраф) при ежемесячной проверке баланса 
"""