"""
    Write a Python program that inputs a polynomial in standard algebraic
    notation and outputs the first derivative of that polynomial.

    Для простоты ведем следующие ограничения:
    1. Полином состоит из следующих элементов ax^c, объединенных + или - 
    2. a - коэффициент, x - переменная, с - показатель степени 
    3. a - любое натуральное число, положительное или отрицательное - недопустимо выражение, не может быть заключено в скобки 
    4. x - любая буква [A-Za-z]
    5. c - то же самое, что и a, но, если отрицательное - то заключено в скобки 
    6. Особые случаи: Переменная может быть опущена - равносильно x^0, 
        степень может быть опущена - равносильно x^1, 
        коэффициент может быть опущен - но должна быть хотя бы переменная

    Постановка задачи:
    Блок 1: Парсинг и проверка входной строки
        1. Разбить полином на члены - рассмотреть все возможные случаи (самая масштабная часть) - покрыть тестами
        2. Проверка на то, что полином не пустой 
        3. Проверка на то, что разбиение полинома по частям суммарно совпадает с первоначальной длиной с учетом удаления пробелов 
    Блок 2: Выделение составляющих отдельного члена 
        1. Выделение коэффициента, переменной и степени 
        2. Проверка, что нет недопустимых символов после выделения  
        3. Проверка, что полином записан в алгебраической нотации, т.е:
            а) Недопустимо, чтобы у двух или более членов совпадали показатели степени 
            б) Степень должна убывать от первого члена к последнему 
            в) Переменная повторяется только один раз
    Блок 3: Реализация класса члена, позволяющего брать производную от него 
    Блок 4: Инициализация класса Полином и генерация производной и её печать 
"""

from re import compile

class Polynomial:
    
    # Константы, связанные с разбором полинома на отдельные части 

    # Части паттернов для упрощения 
    C_VARIABLE = "[a-zA-Z]"
    C_OPERATOR = "[+-]?"
    C_NUMBER = "\d+(?:\.\d+)?"
    C_POW = "\^(?:" + C_NUMBER + "|\(-" + C_NUMBER + "\))"

    # Основной паттерн для разбора полинома 
    C_FINDALL_PATTERN = C_OPERATOR + "(?:" + \
        C_NUMBER + C_VARIABLE + C_POW + "|" + \
        C_VARIABLE + C_POW + "|" + \
        C_NUMBER + C_VARIABLE + "|" + \
        C_NUMBER + "|" + \
        C_VARIABLE + ")" 

    C_FINDALL_PATTERN = compile(pattern=C_FINDALL_PATTERN)

    def __init__(self, p_string: str):
        """
            Конструктор 
            input: 
                p_string - входная строка 
        """
        self.string = p_string
        self._findall()

    def _findall(self):
        """
            Разбирает входную строку на слагаемые,
            записывает результат в переменную класса 
        """
        self._findall_result = self.C_FINDALL_PATTERN.findall(string=self.string)